"use strict";(self.webpackChunkmmsp_station=self.webpackChunkmmsp_station||[]).push([[22475],{2086:(e,t,n)=>{function r(e){const{options:t,value:n}=e;return"number"==typeof t[n]}function s(e){let t="";for(const n in e){const s=e[n];if("boolean"==typeof s)s&&(t+=`#define ${n}\n`);else if("number"==typeof s)t+=`#define ${n} ${s.toFixed()}\n`;else if("object"==typeof s)if(r(s)){const{value:e,options:r,namespace:o}=s,i=o?`${o}_`:"";for(const n in r)t+=`#define ${i}${n} ${r[n].toFixed()}\n`;t+=`#define ${n} ${i}${e}\n`}else{const e=s.options;let r=0;for(const n in e)t+=`#define ${e[n]} ${(r++).toFixed()}\n`;t+=`#define ${n} ${e[s.value]}\n`}}return t}n.d(t,{I:()=>s})},22475:(e,t,n)=>{n.r(t),n.d(t,{BufferObject:()=>r.g,FramebufferObject:()=>s.H,Program:()=>o.B,ProgramCache:()=>i.J,Renderbuffer:()=>a.l,ShaderCompiler:()=>l.Z,Texture:()=>f.g,VertexArrayObject:()=>c.Z,createProgram:()=>u.r,glslifyDefineMap:()=>d.I});var r=n(76718),s=n(12331),o=n(44488),i=n(46082),a=n(62881),l=n(78403),f=n(29492),c=n(36911),d=n(2086),u=n(26373)},26373:(e,t,n)=>{n.d(t,{r:()=>s});var r=n(44488);function s(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";return new r.B(e,n+t.shaders.vertexShader,n+t.shaders.fragmentShader,t.attributes)}},78403:(e,t,n)=>{n.d(t,{Z:()=>r});class r{constructor(e){this._readFile=e}resolveIncludes(e){return this._resolve(e)}_resolve(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Map;if(t.has(e))return t.get(e);const n=this._read(e);if(!n)throw new Error(`cannot find shader file ${e}`);const r=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm;let s=r.exec(n);const o=[];for(;null!=s;)o.push({path:s[1],start:s.index,length:s[0].length}),s=r.exec(n);let i=0,a="";return o.forEach(e=>{a+=n.slice(i,e.start),a+=t.has(e.path)?"":this._resolve(e.path,t),i=e.start+e.length}),a+=n.slice(i),t.set(e,a),a}_read(e){return this._readFile(e)}}}}]);
//# sourceMappingURL=22475.714bcaf4.chunk.js.map