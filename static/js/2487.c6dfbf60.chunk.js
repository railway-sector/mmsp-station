"use strict";(self.webpackChunkmmsp_station=self.webpackChunkmmsp_station||[]).push([[2487,11668],{2487:(e,a,t)=>{t.d(a,{fromItem:()=>m,n:()=>f});var r=t(50076),s=t(39323),n=t(11668),c=t(77491),u=t(31933),i=t(62487),l=t(70652),o=t(64130),y=t(72945);async function m(e){let{portalItem:a}=e;!a||a instanceof l.default||(a=new l.default(a));const t=await async function(e){await e.load();const a=new c.v;return async function(e){const a=e.className,t=i.S[a];return{constructor:await t(),properties:e.properties}}(await f(e,a))}(a);return new(0,t.constructor)({portalItem:a,...t.properties})}async function f(e,a){switch(e.type){case"3DTiles Service":return e.typeKeywords.includes("3DObject")?{className:"UnsupportedLayer"}:{className:"IntegratedMesh3DTilesLayer"};case"CSV":return{className:"CSVLayer"};case"Feature Collection":return async function(e){await e.load();const a=(0,y.Y)(e,"Map Notes"),t=(0,y.Y)(e,"Markup");if(a||t)return{className:"MapNotesLayer"};if((0,y.Y)(e,"Route Layer"))return{className:"RouteLayer"};const r=await e.fetchData();return 1===(0,o.XH)(r)?{className:"FeatureLayer"}:{className:"GroupLayer"}}(e);case"Feature Service":return async function(e,a){const t=await p(e,a);if("object"==typeof t){const{sourceJSON:e,className:a}=t,r={sourceJSON:e};return null!=t.id&&(r.layerId=t.id),{className:a||"FeatureLayer",properties:r}}return{className:"GroupLayer"}}(e,a);case"Feed":case"Stream Service":return{className:"StreamLayer"};case"GeoJson":return{className:"GeoJSONLayer"};case"Group Layer":return{className:"GroupLayer"};case"Image Service":return async function(e,a){await e.load();const t=e.typeKeywords?.map(e=>e.toLowerCase())??[];if(t.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(t.includes("tiled imagery"))return{className:"ImageryTileLayer"};const r=await a.fetchItemData(e),s=r?.layerType;if("ArcGISTiledImageServiceLayer"===s)return{className:"ImageryTileLayer"};if("ArcGISImageServiceLayer"===s)return{className:"ImageryLayer"};const n=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)}),c=n.cacheType?.toLowerCase(),u=n.capabilities?.toLowerCase().includes("tilesonly"),i=n.tileInfo?.format?.toLowerCase()??"",l=null==c&&["jpg","jpeg","png","png8","png24","png32","mixed"].includes(i);return"map"===c||l||u?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}(e,a);case"KML":return{className:"KMLLayer"};case"Knowledge Graph Layer":return{className:"KnowledgeGraphLayer"};case"Map Service":return async function(e,a){return await async function(e,a){const{tileInfo:t}=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)});return t}(e,a)?{className:"TileLayer"}:{className:"MapImageLayer"}}(e,a);case"Media Layer":return{className:"MediaLayer"};case"Scene Service":return async function(e,a){const t=await p(e,a,async()=>{try{if(!e.url)return[];const{serverUrl:t}=await(0,s.L)(e.url,{sceneLayerItem:e}),r=await a.fetchServiceMetadata(t);return r?.tables??[]}catch{return[]}});if("object"==typeof t){const r={};let s;if(null!=t.id?(r.layerId=t.id,s=`${e.url}/layers/${t.id}`):s=e.url,e.typeKeywords?.length)for(const a of Object.keys(u.XX))if(e.typeKeywords.includes(a))return{className:u.XX[a]};const n=await a.fetchServiceMetadata(s,{customParameters:await a.fetchCustomParameters(e,e=>(0,o.pJ)(e)?.customParameters)});return{className:u.XX[n?.layerType]||"SceneLayer",properties:r}}if(!1===t){const t=await a.fetchServiceMetadata(e.url);if("Voxel"===t?.layerType)return{className:"VoxelLayer"}}return{className:"GroupLayer"}}(e,a);case"Video Service":return async function(e,a){return"object"==typeof await p(e,a)?{className:"VideoLayer"}:{className:"GroupLayer"}}(e,a);case"Vector Tile Service":return{className:"VectorTileLayer"};case"WCS":return{className:"WCSLayer"};case"WFS":return{className:"WFSLayer"};case"WMS":return{className:"WMSLayer"};case"WMTS":return{className:"WMTSLayer"};default:throw new r.A("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type})}}async function p(e,a,t){const{url:r,type:s}=e,c="Feature Service"===s;if(!r)return{};if(/\/\d+$/.test(r)){if(c){const t=await a.fetchServiceMetadata(r,{customParameters:await a.fetchCustomParameters(e,e=>(0,o.pJ)(e)?.customParameters)});return(0,u.Gh)(e,(0,u.G$)()),{id:t.id,className:(0,n.K)(t.type),sourceJSON:t}}return{}}if("Video Service"===s){const e=await a.fetchServiceMetadata(r);return!((e.layers?.length??0)>1)&&{}}await e.load();let i=await a.fetchItemData(e);if(c){const{data:t,preferredHost:s}=await(0,o.bO)(i,r,a);(0,u.Gh)(e,s);const n=d(t);if("object"==typeof n){const e=(0,o.rc)(t,n.id);n.className=(0,o.K8)(e?.layerType)}return n}if("Scene Service"===s&&(i=await(0,o.nu)(e,i,a)),(0,o.XH)(i)>0)return d(i);const l=await a.fetchServiceMetadata(r);return t&&(l.tables=await t()),d(l)}function d(e){return 1===(0,o.XH)(e)&&{id:(0,o.pJ)(e)?.id}}},11668:(e,a,t)=>{t.d(a,{K:()=>f,Q:()=>c});var r=t(31933),s=t(67061);const n=new Set(["Catalog Layer","Feature Layer","Oriented Imagery Layer"]);async function c(e,a){const{loadContext:t,...n}=a||{},c=t?await t.fetchServiceMetadata(e,n):await(0,s.V)(e,n),u=(0,r.G$)();m(c),l(c);const i={serviceJSON:c,preferredHost:u};if((c.currentVersion??0)<10.5)return i;const o=`${(0,r.$x)()??e}/layers`,y=t?await t.fetchServiceMetadata(o,n):await(0,s.V)(o,n);return m(y),l(y),i.layersJSON={layers:y.layers,tables:y.tables},i}function u(e){const{type:a}=e;return!!a&&n.has(a)}function i(e){return"Table"===e.type}function l(e){e.layers=e.layers?.filter(u),e.tables=e.tables?.filter(i)}function o(e){e.type||="Feature Layer"}function y(e){e.type||="Table"}function m(e){e.layers?.forEach(o),e.tables?.forEach(y)}function f(e){switch(e){case"Feature Layer":case"Table":return"FeatureLayer";case"Oriented Imagery Layer":return"OrientedImageryLayer";case"Catalog Layer":return"CatalogLayer"}return"FeatureLayer"}},64130:(e,a,t)=>{t.d(a,{Ju:()=>o,K8:()=>f,XH:()=>y,_r:()=>c,bO:()=>u,l:()=>m,nu:()=>p,pJ:()=>i,rc:()=>l});var r=t(39323),s=t(11668),n=t(31933);function c(e){const a={id:e.id,name:e.name},t=(0,s.K)(e.type);return"FeatureLayer"!==t&&(a.layerType=t),a}async function u(e,a,t){let r;if(null==e?.layers||null==e?.tables){const s=await t.fetchServiceMetadata(a,{customParameters:i(e)?.customParameters});r=(0,n.G$)(),(e=e||{}).layers=e.layers||s?.layers?.map(c),e.tables=e.tables||s?.tables?.map(c)}return{data:e,preferredHost:r}}function i(e){if(!e)return null;const{layers:a,tables:t}=e;return a?.length?a[0]:t?.length?t[0]:null}function l(e,a){return null==a?null:[...e.layers||[],...e.tables||[]].find(e=>e.id===a)}function o(e,a){return[...e.layers||[],...e.tables||[]].filter(e=>{let{layerType:t}=e;return t?a.includes(t):a.includes("ArcGISFeatureLayer")})}function y(e){return(e?.layers?.length??0)+(e?.tables?.length??0)}function m(e){switch(e){case"catalog":return["CatalogLayer"];case"feature":return["ArcGISFeatureLayer"];case"oriented-imagery":return["OrientedImageryLayer"];case"subtype-group":return["SubtypeGroupLayer","SubtypeGroupTable"]}return null}function f(e){switch(e){case"CatalogLayer":return"CatalogLayer";case"OrientedImageryLayer":return"OrientedImageryLayer";case"SubtypeGroupLayer":case"SubtypeGroupTable":return"SubtypeGroupLayer"}return"FeatureLayer"}async function p(e,a,t){if(!e?.url)return a??{};if(a??={},!a.layers){const r=await t.fetchServiceMetadata(e.url);a.layers=r.layers?.map(c)}const{serverUrl:s,portalItem:n}=await(0,r.L)(e.url,{sceneLayerItem:e,customParameters:i(a)?.customParameters}).catch(()=>({serverUrl:null,portalItem:null}));if(null==s)return a.tables=[],a;if(!a.tables&&n){const e=await n.fetchData().catch(()=>null);if(e?.tables)a.tables=e.tables.map(c);else{const r=await t.fetchServiceMetadata(s,{customParameters:i(e)?.customParameters}).catch(()=>null);a.tables=r?.tables?.map(c)}}if(a.tables)for(const r of a.tables)r.url=`${s}/${r.id}`;return a}},67061:(e,a,t)=>{t.d(a,{V:()=>s});var r=t(3825);async function s(e,a){const{data:t}=await(0,r.A)(e,{responseType:"json",query:{f:"json",...a?.customParameters,token:a?.apiKey}});return t}},77491:(e,a,t)=>{t.d(a,{v:()=>s});var r=t(67061);class s{constructor(){this._serviceMetadatas=new Map,this._itemDatas=new Map}async fetchServiceMetadata(e,a){const t=this._serviceMetadatas.get(e);if(t)return t;const s=await(0,r.V)(e,a);return this._serviceMetadatas.set(e,s),s}async fetchItemData(e){const{id:a}=e;if(!a)return null;const{_itemDatas:t}=this;if(t.has(a))return t.get(a);const r=await e.fetchData();return t.set(a,r),r}async fetchCustomParameters(e,a){const t=await this.fetchItemData(e);return t&&"object"==typeof t&&(a?a(t):t.customParameters)||null}}}}]);
//# sourceMappingURL=2487.c6dfbf60.chunk.js.map