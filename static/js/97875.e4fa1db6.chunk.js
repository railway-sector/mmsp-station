"use strict";(self.webpackChunkmmsp_station=self.webpackChunkmmsp_station||[]).push([[97875],{97875:(t,e,n)=>{n.r(e),n.d(e,{queryUnitIdentifiers:()=>c});var s=n(3825),r=n(54994),i=n(35143),o=n(42553),a=n(46053),u=(n(81806),n(76460),n(47249),n(28379)),p=n(85842);let d=class extends o.A{constructor(t){super(t),this.container=null,this.ranges=null}readContainer(t,e){return{sourceId:e.sourceId,globalId:e.globalId}}readRanges(t,e){return[...e.gaps.map(t=>({firstUnit:t.start,numUnits:t.end-t.start+1,isGap:!0})),...e.unitIdentifiers.map(t=>({firstUnit:t.firstUnit,numUnits:t.numUnits,isGap:!1,content:{sourceId:t.sourceId,globalId:t.globalId}}))]}};async function c(t,e,n){const i=(0,r.Dl)(t),o=e.toJSON();e.objects&&(o.objects=JSON.stringify(e.objects));const a={...o,f:"json"},u=(0,r.lF)({...i.query,...a}),p=(0,r.jV)(u,{...n,method:"post"}),c=`${i.path}/unitIdentifiers/query`,{data:l}=await(0,s.A)(c,p);return l.objects.map(t=>d.fromJSON(t))}(0,i._)([(0,a.MZ)({type:Object})],d.prototype,"container",void 0),(0,i._)([(0,u.w)("container",["sourceId","globalId"])],d.prototype,"readContainer",null),(0,i._)([(0,a.MZ)({type:[Object]})],d.prototype,"ranges",void 0),(0,i._)([(0,u.w)("ranges",["gaps","unitIdentifiers"])],d.prototype,"readRanges",null),d=(0,i._)([(0,p.$)("esri.rest.networks.unitIdentifiers.support.UnitQueryResult")],d)}}]);
//# sourceMappingURL=97875.e4fa1db6.chunk.js.map